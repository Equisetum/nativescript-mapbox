0 info it worked if it ends with ok
1 verbose cli [ '/Users/eddyverbruggen/.nvm/versions/node/v4.2.2/bin/node',
1 verbose cli   '/Users/eddyverbruggen/.nvm/versions/node/v4.2.2/bin/npm',
1 verbose cli   'publish' ]
2 info using npm@2.14.7
3 info using node@v4.2.2
4 verbose publish [ '.' ]
5 silly cache add args [ '.', null ]
6 verbose cache add spec .
7 silly cache add parsed spec Result {
7 silly cache add   raw: '.',
7 silly cache add   scope: null,
7 silly cache add   name: null,
7 silly cache add   rawSpec: '.',
7 silly cache add   spec: '/Users/eddyverbruggen/sandboxes/nativescript-mapbox',
7 silly cache add   type: 'directory' }
8 verbose addLocalDirectory /Users/eddyverbruggen/.npm/nativescript-mapbox/2.0.0/package.tgz not in flight; packing
9 verbose tar pack [ '/Users/eddyverbruggen/.npm/nativescript-mapbox/2.0.0/package.tgz',
9 verbose tar pack   '/Users/eddyverbruggen/sandboxes/nativescript-mapbox' ]
10 verbose tarball /Users/eddyverbruggen/.npm/nativescript-mapbox/2.0.0/package.tgz
11 verbose folder /Users/eddyverbruggen/sandboxes/nativescript-mapbox
12 info prepublish nativescript-mapbox@2.0.0
13 verbose addLocalTarball adding from inside cache /Users/eddyverbruggen/.npm/nativescript-mapbox/2.0.0/package.tgz
14 silly cache afterAdd nativescript-mapbox@2.0.0
15 verbose afterAdd /Users/eddyverbruggen/.npm/nativescript-mapbox/2.0.0/package/package.json not in flight; writing
16 verbose afterAdd /Users/eddyverbruggen/.npm/nativescript-mapbox/2.0.0/package/package.json written
17 silly publish { name: 'nativescript-mapbox',
17 silly publish   version: '2.0.0',
17 silly publish   description: 'Native Maps, by Mapbox.',
17 silly publish   main: 'mapbox.js',
17 silly publish   typings: 'mapbox.d.ts',
17 silly publish   nativescript: { platforms: { android: '2.3.0', ios: '2.3.0' } },
17 silly publish   repository:
17 silly publish    { type: 'git',
17 silly publish      url: 'git+https://github.com/eddyverbruggen/nativescript-mapbox.git' },
17 silly publish   keywords:
17 silly publish    [ 'ecosystem:nativescript',
17 silly publish      'NativeScript',
17 silly publish      'Map',
17 silly publish      'Maps',
17 silly publish      'Native Maps',
17 silly publish      'Mapbox' ],
17 silly publish   author:
17 silly publish    { name: 'Telerik / Eddy Verbruggen',
17 silly publish      email: 'eddyverbruggen@gmail.com' },
17 silly publish   license:
17 silly publish    { type: 'MIT',
17 silly publish      url: 'https://github.com/eddyverbruggen/nativescript-mapbox/blob/master/LICENSE' },
17 silly publish   bugs: { url: 'https://github.com/eddyverbruggen/nativescript-mapbox/issues' },
17 silly publish   homepage: 'https://github.com/eddyverbruggen/nativescript-mapbox',
17 silly publish   readme: '# NativeScript Mapbox\n\nAwesome native OpenGL-powered maps - by Mapbox\n\n> Note that version 1.5.0+ requires NativeScript 2.3.0.\n\n<img src="https://raw.githubusercontent.com/EddyVerbruggen/nativescript-mapbox/master/screenshots/ios-demoapp-slice.png" width="375px" height="196px" />\n\n### Use when\n* you want full map styling capability to match the uses of your app (example: downplaying highways for a running app),\n* you want a platform independent map implementation,\n* you care about performance so you don\'t want a web based solution,\n* you want an open source map implementation that you can tweak yourself,\n* you want to leverage Mapbox\'s backend to visualize massive geo data sets,\n* you want advanced analytics about your app\'s users,\n* __NEW:__ You need offline maps and custom markers.\n\n## Prerequisites\nYou need a Mapbox API access token (they have a free Starter plan!), so [sign up with Mapbox](https://www.mapbox.com/signup/).\nOnce you\'ve registered go to your Account > Apps > New token. The \'Default Secret Token\' is what you\'ll need.\n\n## Installation\nFrom the command prompt go to your app\'s root folder and execute:\n```\ntns plugin add nativescript-mapbox\n```\n\nIf you get an error during iOS build related to Podspec versions, probably the easiest fix is:\n`tns platform remove ios` and `tns platform add ios`.\n\nOn Android make sure you add this to the `<application>` node of `app/App_Resources/Android/AndroidManifest.xml` (the plugin already attempts to do so):\n\n```xml\n  <service android:name="com.mapbox.mapboxsdk.telemetry.TelemetryService" />\n```\n\n## Demo\nIf you want a quickstart, [clone our demo app](https://github.com/EddyVerbruggen/nativescript-mapbox-demo).\nIt shows you how to draw a map in XML and JS with almost all possible options.\n\n\n## Declaring a map in XML (recommended approach)\nYou can instantiate a map from JS or TS but declaring it in XML has a few advantages. As the map is yet another view component it will play nice with any NativeScript layout you throw it in. You can also easily add multiple maps to the same page or to different pages in any layout you like.\n\nA simple layout could look like this:\n\n<img src="https://raw.githubusercontent.com/EddyVerbruggen/nativescript-mapbox/master/screenshots/ios-xml-declared.png" width="373px" height="361px" />\n\nCould be rendered by a definition like this:\n\n```xml\n<Page xmlns="http://schemas.nativescript.org/tns.xsd" xmlns:map="nativescript-mapbox" navigatingTo="navigatingTo">\n  <StackLayout>\n    <Label text="Nice map, huh!" class="title"/>\n    <ContentView height="240" width="240">\n      <map:Mapbox\n          accessToken="your_token"\n          mapStyle="light"\n          latitude="52.3702160"\n          longitude="4.8951680"\n          zoomLevel="3"\n          showUserLocation="true"\n          mapReady="onMapReady">\n      </map:Mapbox>\n    </ContentView>\n  </StackLayout>\n</Page>\n```\n\nAll currently supported options for your XML based map are:\n\n|option|default|description\n|---|---|---\n|`accesstoken`|-|see \'Prerequisites\' above\n|`mapStyle`|streets|streets, light, dark, emerald, hybrid, satellite\n|`latitude `|-|Set the center of the map by passing this in\n|`longitude`|-|.. and this as well\n|`zoomLevel`|0|0-20\n|`showUserLocation `|false|Requires location permissions on Android which you can remove from `AndroidManifest.xml` if you don\'t need them\n|`hideCompass `|false|Don\'t show the compass in the top right corner during rotation of the map\n|`hideLogo`|false|Mapbox requires `false` if you\'re on a free plan\n|`hideAttribution `|true|Mapbox requires `false` if you\'re on a free plan\n|`disableZoom`|false|Don\'t allow the user to zoom in or out (pinch and double-tap)\n|`disableRotation`|false|Don\'t allow the user to rotate the map (two finger gesture)\n|`disableScroll`|false|Don\'t allow the user to move the center of the map (one finger drag)\n|`disableTilt`|false|Don\'t allow the user to tilt the map (two finger drag up or down)\n|`mapReady`|-|The name of a callback function you can declare to interact with the map after it has been drawn\n\n### Want to add markers?\nThis where that last option in the table above comes in - `mapReady`.\nIt allows you to interact with the map after it has been drawn to the page.\n\nOpen `main-page.[js|ts]` and add this (see [`addMarkers`](#addmarkers) further below for the full marker API):\n\n```js\nvar mapbox = require("nativescript-mapbox");\n\nfunction onMapReady(args) {\n  args.map.addMarkers([\n    {\n      lat: 52.3602160,\n      lng: 4.8891680,\n      title: \'One-line title here\',\n      subtitle: \'Really really nice location\',\n      onCalloutTap: function(){console.log("\'Nice location\' marker callout tapped");}\n    }]\n  );\n}\n\nexports.onMapReady = onMapReady;\n```\n\nNote that at the moment this is the only one of the methods listed below\nyou can use with the XML-rendered map API. It\'s very easy to add other methods though,\nso please open an issue on GitHub if you need to fi get the zoom level in a similar way.\n\n## Declaring a map programmatically\n\n### show\n```js\n  var mapbox = require("nativescript-mapbox");\n  var platform = require("platform");\n  var isIOS = platform.device.os === platform.platformNames.ios;\n\n  mapbox.show({\n    accessToken: \'YOUR_API_ACCESS_TOKEN\', // see \'Prerequisites\' above\n    style: mapbox.MapStyle.DARK, // see the mapbox.MapStyle enum for other options, default mapbox.MapStyle.STREETS\n    margins: {\n      left: 40, // default 0\n      right: 40, // default 0\n      top: 450, // default 0\n      bottom: isIOS ? 50: 0 // default 0, this shows how to override the style for iOS\n    },\n    center: { // optional without a default\n      lat: 52.3702160,\n      lng: 4.8951680\n    },\n    zoomLevel: 9.25, // 0-20, default 0\n    showUserLocation: true, // default false - requires location permissions on Android which you can remove from AndroidManifest.xml if you don\'t need them\n    hideAttribution: false, // default true, Mapbox requires `false` if you\'re on a free plan\n    hideLogo: false, // default false, Mapbox requires this default if you\'re on a free plan\n    hideCompass: false, // default false\n    disableRotation: false, // default false\n    disableScroll: false, // default false\n    disableZoom: false, // default false\n    markers: [ // optional without a default\n      {\n        id: 1, // can be user in \'removeMarkers()\'\n        lat: 52.3732160, // mandatory\n        lng: 4.8941680, // mandatory\n        title: \'Nice location\', // recommended to pass in\n        subtitle: \'Really really nice location\', // one line is available on iOS, multiple on Android\n        iconPath: \'res/markers/green_pin_marker.png\', // anywhere in your app folder\n        onTap: function(marker) { console.log("This marker was tapped"); },\n        onCalloutTap: function(marker) { console.log("The callout of this marker was tapped"); }\n      }\n    ]\n  }).then(\n      function(result) {\n        console.log("Mapbox show done");\n      },\n      function(error) {\n        console.log("mapbox show error: " + error);\n      }\n  )\n```\n\n### hide\nAll further examples assume `mapbox` has been required.\nAlso, all functions support promises, but we\'re leaving out the `.then()` stuff for brevity where it doesn\'t add value.\n```js\n  mapbox.hide();\n```\n\n### unhide\nIf you previously called `hide()` you can quickly unhide the map,\ninstead of redrawing it (which is a lot slower and you loose the viewport position, etc).\n\n```js\n  mapbox.unhide();\n```\n\n### addMarkers\n```js\n  var onTap = function(marker) {\n    console.log("Marker tapped with title: \'" + marker.title + "\'");\n  };\n  var onCalloutTap = function(marker) {\n    alert("Marker callout tapped with title: \'" + marker.title + "\'");\n  };\n\n  mapbox.addMarkers([\n    {\n      id: 2, // can be user in \'removeMarkers()\'\n      lat: 52.3602160, // mandatory\n      lng: 4.8891680, // mandatory\n      title: \'One-line title here\', // no popup unless set\n      subtitle: \'Infamous subtitle!\',\n      iconPath: \'res/markers/home_marker.png\',\n      onTap: onTap,\n      onCalloutTap: onCalloutTap\n    },\n    {\n      ..\n    }\n  ])\n```\n\n### removeMarkers\nYou can either remove all markers by not passing in an argument,\nor remove specific marker id\'s (which you specified previously). \n\n```js\n  // remove all markers\n  mapbox.removeMarkers();\n  \n  // remove specific markers by id\n  mapbox.removeMarkers([1, 2]);\n```\n\n### setCenter\n```js\n  mapbox.setCenter(\n      {\n        lat: 52.3602160, // mandatory\n        lng: 4.8891680, // mandatory\n        animated: false // default true\n      }\n  )\n```\n\n### getCenter\nHere the promise callback makes sense, so adding it to the example:\n```js\n  mapbox.getCenter().then(\n      function(result) {\n        console.log("Mapbox getCenter done, result: " + JSON.stringify(result));\n      },\n      function(error) {\n        console.log("mapbox getCenter error: " + error);\n      }\n  )\n```\n\n### setZoomLevel\n```js\n  mapbox.setZoomLevel(\n      {\n        level: 6.5, // mandatory, 0-20\n        animated: true // default true\n      }\n  )\n```\n\n### getZoomLevel\n```js\n  mapbox.getZoomLevel().then(\n      function(result) {\n        console.log("Mapbox getZoomLevel done, result: " + JSON.stringify(result));\n      },\n      function(error) {\n        console.log("mapbox getZoomLevel error: " + error);\n      }\n  )\n```\n\n### animateCamera\n\n```js\n  // this is a boring triangle drawn near Amsterdam Central Station\n  mapbox.animateCamera({\n    // this is where we animate to\n    target: {\n        lat: 52.3732160,\n        lng: 4.8941680,\n    },\n    zoomLevel: 17, // Android\n    altitude: 2000, // iOS (meters from the ground)\n    bearing: 270, // Where the camera is pointing, 0-360 (degrees)\n    tilt: 50,\n    duration: 10000 // in milliseconds\n  })\n```\n\n### setTilt (Android)\n```js\n  mapbox.setTilt(\n      {\n        tilt: 40, // default 30 (degrees angle)\n        duration: 4000 // default 5000 (milliseconds)\n      }\n  )\n```\n\n### getTilt (Android)\n```js\n  mapbox.getTilt().then(\n      function(tilt) {\n        console.log("Current map tilt: " +  tilt);\n      }\n  )\n```\n\n### addPolygon (Android)\nDraw a shape (like a line/route, or star). Just connect the dots like we did as a child. The first person to tweet a snowman drawn with this function gets a T-shirt.\n```js\n  // this is a boring triangle drawn near Amsterdam Central Station\n  mapbox.addPolygon({\n    points: [\n      {\n        \'lat\': 52.3832160, // mandatory\n        \'lng\': 4.8991680 // mandatory\n      },\n      {\n        \'lat\': 52.3632160,\n        \'lng\': 4.9011680\n      },\n      {\n        \'lat\': 52.3932160,\n        \'lng\': 4.8911680\n      }\n    ]\n  })\n```\n\n### addPolyline (Android)\nDraw a polyline. Connect the points given as parameters.\n```js\n  // Draw a two segment line near Amsterdam Central Station\n  mapbox.addPolyline({\n      color: 0xff29a025, //Set the color of the line (default black)\n      width: 7, //Set the width of the line (default 5)\n      points: [\n          {\n              \'lat\': 52.3833160, // mandatory\n              \'lng\': 4.8991780 // mandatory\n          },\n          {\n              \'lat\': 52.3834160,\n              \'lng\': 4.8991880\n          },\n          {\n              \'lat\': 52.3835160,\n              \'lng\': 4.8991980\n          }\n      ]\n  });\n```\n\n## Offline maps\nFor situations where you want the user to pre-load certain regions you can use these methods to create and remove offline regions.\n\n__Important read:__ [the offline maps documentation by Mapbox](https://www.mapbox.com/help/mobile-offline/).\n\n### downloadOfflineRegion\nThis example downloads the region \'Amsterdam\' on zoom levels 9, 10 and 11 for map style \'outdoors\'.\n\n```js\n  mapbox.downloadOfflineRegion(\n    {      \n      accessToken: accessToken, // required for Android in case no map has been shown yet\n      name: "Amsterdam", // this name can be used to delete the region later\n      style: mapbox.MapStyle.OUTDOORS,\n      minZoom: 9,\n      maxZoom: 11,\n      bounds: {\n        north: 52.4820,\n        east: 5.1087,\n        south: 52.2581,\n        west: 4.6816\n      },\n      // this function is called many times during a download, so\n      // use it to show an awesome progress bar!\n      onProgress: function (progress) {\n        console.log("Download progress: " + JSON.stringify(progress));\n      }\n    }\n  ).then(\n    function() {\n      console.log("Offline region downloaded");\n    },\n    function(error) {\n      console.log("Download error: " + error);\n    }\n  );\n```\n\n#### Advanced example: download the current viewport\nGrab the viewport with the `mapbox.getViewport()` function and download it at various zoom levels:\n\n```js\n  // I spare you the error handling on this one..\n  mapbox.getViewport().then(function(viewport) {\n    mapbox.downloadOfflineRegion(\n      {\n        name: "LastViewport", // anything you like really\n        style: mapbox.MapStyle.OUTDOORS,\n        minZoom: viewport.zoomLevel,\n        maxZoom: viewport.zoomLevel + 2, // higher zoom level is lower to the ground\n        bounds: viewport.bounds,\n        onProgress: function (progress) {\n          console.log("Download %: " + progress.percentage);\n        }\n      }\n    );\n  });\n```\n\n### listOfflineRegions\nTo help you manage offline regions there\'s a `listOfflineRegions` function you can use. You can then fi. call `deleteOfflineRegion` (see below) and pass in the `name` to remove any cached region(s) you like.\n\n```js\n  mapbox.listOfflineRegions({\n    // required for Android in case no map has been shown yet\n    accessToken: accessToken,\n  }).then(\n    function(regions) {\n      console.log(JSON.stringify(JSON.stringify(regions));\n    },\n    function(error) {\n      console.log("Error while listing offline regions: " + error);\n    }\n  );\n\n```\n\n### deleteOfflineRegion\nYou can remove regions you\'ve previously downloaded. Any region(s) matching the `name` param will be removed locally.\n\n```js\n  mapbox.deleteOfflineRegion({\n    name: "Amsterdam"\n  }).then(\n    function() {\n      console.log("Offline region deleted");\n    },\n    function(error) {\n      console.log("Error while deleting an offline region: " + error);\n    }\n  );\n```\n\n\n## Permissions\n\n### hasFineLocationPermission / requestFineLocationPermission\nOn Android 6 you need to request permission to be able to show the user\'s position on the map at runtime when targeting API level 23+.\nEven if the `uses-permission` tag for `ACCESS_FINE_LOCATION` is present in `AndroidManifest.xml`.\n\nNote that `hasFineLocationPermission` will return true when:\n* You\'re running this on iOS, or\n* You\'re targeting an API level lower than 23, or\n* You\'re using Android < 6, or\n* You\'ve already granted permission.\n\n```js\n  mapbox.hasFineLocationPermission().then(\n      function(granted) {\n        // if this is \'false\' you probably want to call \'requestFineLocationPermission\' now\n        console.log("Has Location Permission? " + granted);\n      }\n  );\n\n  // if no permission was granted previously this will open a user consent screen\n  mapbox.requestFineLocationPermission().then(\n      function() {\n        console.log("Location permission requested");\n      }\n  );\n```\n\nNote that the `show` function will also check for permission if you passed in `showUserLocation : true`.\nIf you didn\'t request permission before showing the map, and permission was needed, then\nthe location is not drawn on the map and the plugin will log an error to the console.\n',
17 silly publish   readmeFilename: 'README.md',
17 silly publish   gitHead: '7ef9363bbe143b651719f7c349ce33371f477339',
17 silly publish   _id: 'nativescript-mapbox@2.0.0',
17 silly publish   scripts: {},
17 silly publish   _shasum: '4fc26c47b8651e77a29f4d8b19c57fe2cd978698',
17 silly publish   _from: '.' }
18 verbose getPublishConfig undefined
19 silly mapToRegistry name nativescript-mapbox
20 silly mapToRegistry using default registry
21 silly mapToRegistry registry https://registry.npmjs.org/
22 silly mapToRegistry uri https://registry.npmjs.org/nativescript-mapbox
23 verbose publish registryBase https://registry.npmjs.org/
24 silly publish uploading /Users/eddyverbruggen/.npm/nativescript-mapbox/2.0.0/package.tgz
25 verbose request uri https://registry.npmjs.org/nativescript-mapbox
26 verbose request sending authorization for write operation
27 info attempt registry request try #1 at 10:50:29 PM
28 verbose request using bearer token for auth
29 verbose request id 1514d01bc8dff332
30 http request PUT https://registry.npmjs.org/nativescript-mapbox
31 http 403 https://registry.npmjs.org/nativescript-mapbox
32 verbose headers { 'content-type': 'application/json',
32 verbose headers   'cache-control': 'max-age=300',
32 verbose headers   'content-length': '95',
32 verbose headers   'accept-ranges': 'bytes',
32 verbose headers   date: 'Wed, 12 Oct 2016 20:49:41 GMT',
32 verbose headers   via: '1.1 varnish',
32 verbose headers   connection: 'keep-alive',
32 verbose headers   'x-served-by': 'cache-ams4434-AMS',
32 verbose headers   'x-cache': 'MISS',
32 verbose headers   'x-cache-hits': '0',
32 verbose headers   'x-timer': 'S1476305380.775722,VS0,VE1181',
32 verbose headers   vary: 'Accept-Encoding' }
33 verbose request invalidating /Users/eddyverbruggen/.npm/registry.npmjs.org/nativescript-mapbox on PUT
34 error publish Failed PUT 403
35 verbose stack Error: "You cannot publish over the previously published version 2.0.0." : nativescript-mapbox
35 verbose stack     at makeError (/Users/eddyverbruggen/.nvm/versions/node/v4.2.2/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:264:12)
35 verbose stack     at CachingRegistryClient.<anonymous> (/Users/eddyverbruggen/.nvm/versions/node/v4.2.2/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:252:14)
35 verbose stack     at Request._callback (/Users/eddyverbruggen/.nvm/versions/node/v4.2.2/lib/node_modules/npm/node_modules/npm-registry-client/lib/request.js:172:14)
35 verbose stack     at Request.self.callback (/Users/eddyverbruggen/.nvm/versions/node/v4.2.2/lib/node_modules/npm/node_modules/request/request.js:198:22)
35 verbose stack     at emitTwo (events.js:87:13)
35 verbose stack     at Request.emit (events.js:172:7)
35 verbose stack     at Request.<anonymous> (/Users/eddyverbruggen/.nvm/versions/node/v4.2.2/lib/node_modules/npm/node_modules/request/request.js:1063:14)
35 verbose stack     at emitOne (events.js:82:20)
35 verbose stack     at Request.emit (events.js:169:7)
35 verbose stack     at IncomingMessage.<anonymous> (/Users/eddyverbruggen/.nvm/versions/node/v4.2.2/lib/node_modules/npm/node_modules/request/request.js:1009:12)
36 verbose statusCode 403
37 verbose pkgid nativescript-mapbox
38 verbose cwd /Users/eddyverbruggen/sandboxes/nativescript-mapbox
39 error Darwin 15.6.0
40 error argv "/Users/eddyverbruggen/.nvm/versions/node/v4.2.2/bin/node" "/Users/eddyverbruggen/.nvm/versions/node/v4.2.2/bin/npm" "publish"
41 error node v4.2.2
42 error npm  v2.14.7
43 error code E403
44 error "You cannot publish over the previously published version 2.0.0." : nativescript-mapbox
45 error If you need help, you may report this error at:
45 error     <https://github.com/npm/npm/issues>
46 verbose exit [ 1, true ]
